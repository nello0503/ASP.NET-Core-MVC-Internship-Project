// <auto-generated />
using System;
using Formazione.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Formazione.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Formazione.Models.DocenteTutor", b =>
                {
                    b.Property<int>("DocenteTutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocenteTutorID"));

                    b.Property<string>("CF")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Cellulare")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IDutenteins")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultcanc")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultmod")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Tipologia")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataorains")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultcanc")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultmod")
                        .HasColumnType("datetime");

                    b.Property<short>("eliminato")
                        .HasColumnType("smallint");

                    b.HasKey("DocenteTutorID");

                    b.ToTable("DocenteTutor");
                });

            modelBuilder.Entity("Formazione.Models.EdizioneCorso", b =>
                {
                    b.Property<int>("EdizioneCorsoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EdizioneCorsoID"));

                    b.Property<int?>("Anno")
                        .HasColumnType("int");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IDutenteins")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultcanc")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultmod")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroEdizione")
                        .HasColumnType("int");

                    b.Property<int?>("ProgettoFormativoID")
                        .HasColumnType("int");

                    b.Property<int?>("QuantitàModuli")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dataorains")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultcanc")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultmod")
                        .HasColumnType("datetime");

                    b.Property<short?>("eliminato")
                        .HasColumnType("smallint");

                    b.HasKey("EdizioneCorsoID");

                    b.HasIndex("ProgettoFormativoID");

                    b.ToTable("Edizioni");
                });

            modelBuilder.Entity("Formazione.Models.Modulo", b =>
                {
                    b.Property<int>("ModuloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuloID"));

                    b.Property<int>("EdizioneCorsoID")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteins")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultcanc")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultmod")
                        .HasColumnType("int");

                    b.Property<DateTime>("data_inizio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataorains")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultcanc")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultmod")
                        .HasColumnType("datetime");

                    b.Property<short?>("eliminato")
                        .HasColumnType("smallint");

                    b.Property<int>("totale_ore")
                        .HasColumnType("int");

                    b.HasKey("ModuloID");

                    b.HasIndex("EdizioneCorsoID");

                    b.ToTable("Moduli");
                });

            modelBuilder.Entity("Formazione.Models.ProgettoFormativo", b =>
                {
                    b.Property<int>("ProgettoFormativoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgettoFormativoID"));

                    b.Property<int?>("IDutenteins")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultcanc")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultmod")
                        .HasColumnType("int");

                    b.Property<int>("TipoCorsoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dataorains")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultcanc")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultmod")
                        .HasColumnType("datetime");

                    b.Property<string>("direttore_scientifico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("eliminato")
                        .HasColumnType("smallint");

                    b.Property<int?>("numero_partecipanti")
                        .HasColumnType("int");

                    b.Property<int?>("ore_edizione")
                        .HasColumnType("int");

                    b.Property<string>("sede_svolgimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipologia_evento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titolo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tutor_aula")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgettoFormativoID");

                    b.HasIndex("TipoCorsoID");

                    b.ToTable("Progetti");
                });

            modelBuilder.Entity("Formazione.Models.TipoCorso", b =>
                {
                    b.Property<int>("TipoCorsoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoCorsoID"));

                    b.Property<int?>("AnniValidità")
                        .HasColumnType("int");

                    b.Property<string>("Codice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescrizioneCodice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Durata")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteins")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultcanc")
                        .HasColumnType("int");

                    b.Property<int?>("IDutenteultmod")
                        .HasColumnType("int");

                    b.Property<int?>("MaxDiscenti")
                        .HasColumnType("int");

                    b.Property<int?>("Moduli")
                        .HasColumnType("int");

                    b.Property<int?>("Sedute")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dataorains")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultcanc")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("dataoraultmod")
                        .HasColumnType("datetime");

                    b.Property<short>("eliminato")
                        .HasColumnType("smallint");

                    b.HasKey("TipoCorsoID");

                    b.ToTable("Corsi");
                });

            modelBuilder.Entity("Formazione.Models.EdizioneCorso", b =>
                {
                    b.HasOne("Formazione.Models.ProgettoFormativo", null)
                        .WithMany("edizioneCorso")
                        .HasForeignKey("ProgettoFormativoID");
                });

            modelBuilder.Entity("Formazione.Models.Modulo", b =>
                {
                    b.HasOne("Formazione.Models.EdizioneCorso", "Edizione")
                        .WithMany("Moduli")
                        .HasForeignKey("EdizioneCorsoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edizione");
                });

            modelBuilder.Entity("Formazione.Models.ProgettoFormativo", b =>
                {
                    b.HasOne("Formazione.Models.TipoCorso", "TipoCorso")
                        .WithMany("progettiFormativi")
                        .HasForeignKey("TipoCorsoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCorso");
                });

            modelBuilder.Entity("Formazione.Models.EdizioneCorso", b =>
                {
                    b.Navigation("Moduli");
                });

            modelBuilder.Entity("Formazione.Models.ProgettoFormativo", b =>
                {
                    b.Navigation("edizioneCorso");
                });

            modelBuilder.Entity("Formazione.Models.TipoCorso", b =>
                {
                    b.Navigation("progettiFormativi");
                });
#pragma warning restore 612, 618
        }
    }
}
